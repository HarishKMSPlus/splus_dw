/**
* Script file for use in the Script pipelet node.
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @output MyProductID : String
*   @output message : String
*   @input Product : Object
*   @output MyProduct : Object 
*
*/

importPackage( dw.util );
importPackage( dw.system );
importPackage( dw.catalog );
importPackage( dw.net );

function execute( args : PipelineDictionary ) : Number
{

    // require scripts or system libs here 
     var logger = require('dw/system/Logger');

    // read pipeline dictionary input parameter
    // ... = args.ExampleIn;

    // insert business logic here

    // write pipeline dictionary output parameter

    // args.ExampleOut = ...


	//args.MyProduct=args.Product;
	
//	if(args.MyProduct==null){
	//	logger.debug("Error condition as no product is found. Error page");
		
//	}
	//else
//	{
	//	logger.debug("We invoke the webservice from here");
		
		
		
	try {
		var httpClient : HTTPClient = new HTTPClient();
		httpClient.setTimeout(5000);
		httpClient.open('GET', 'https://www.w3schools.com/xml/note.xml');
		httpClient.send();

		if (httpClient.statusCode == 200) {
			
			args.message = httpClient.text;
			
			return PIPELET_NEXT;
		} else {
			// error handling
			//return "An error retreiving reviews from Bazaarvoice occured " + httpClient.statusCode;
			return PIPELET_NEXT;
		}

	} catch (e) {
		//return "An error retreiving reviews from Bazaarvoice" + e;
		return PIPELET_NEXT;
	}
		
	//}
	
	
 //  return PIPELET_NEXT;
}
